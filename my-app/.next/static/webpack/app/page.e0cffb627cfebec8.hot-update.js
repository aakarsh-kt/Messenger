/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"5cb488aad911\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzPzRmMzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI1Y2I0ODhhYWQ5MTFcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/App.jsx":
/*!*********************!*\
  !*** ./app/App.jsx ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ LandingPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_navbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/navbar */ \"(app-pages-browser)/./app/components/navbar.jsx\");\n/* harmony import */ var _components_sidebar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/sidebar */ \"(app-pages-browser)/./app/components/sidebar.jsx\");\n/* harmony import */ var _components_sidebar__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_components_sidebar__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_chat__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/chat */ \"(app-pages-browser)/./app/components/chat.jsx\");\n/* harmony import */ var react_split__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-split */ \"(app-pages-browser)/../node_modules/react-split/dist/react-split.es.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./app/firebase.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! firebase/auth */ \"(app-pages-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _userContext__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./userContext */ \"(app-pages-browser)/./app/userContext.jsx\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _components_searchUser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/searchUser */ \"(app-pages-browser)/./app/components/searchUser.jsx\");\n/* harmony import */ var _components_newGroup__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./components/newGroup */ \"(app-pages-browser)/./app/components/newGroup.jsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n // Import the auth instance\n\n\n\n\n\n\n\nfunction LandingPage() {\n    _s();\n    const contact = [\n        {\n            name: \"Giga Don\",\n            msg: \"Peene Chale\",\n            time: Date()\n        },\n        {\n            name: \"Dimli\",\n            msg: \"Fookne Chale\",\n            time: Date()\n        },\n        {\n            name: \"Simlim\",\n            msg: \"Tahalne Chale\",\n            time: Date()\n        }\n    ];\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(\"\");\n    // const userContext=useUser();\n    const [currChat, setCurrChat] = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(0);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_8__.useRouter)();\n    // const [user, setUser] = useState(userContext);\n    // useEffect(()=>{\n    //   setUser(userContext);\n    // },[userContext])\n    // const {user,setUser}=useContext(UserContext);\n    const [chats, setChats] = react__WEBPACK_IMPORTED_MODULE_5___default().useState([]);\n    // const router = useRouter(); // Only safe to use inside useEffect\n    const [playerInfo, setPlayerInfo] = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_5__.useEffect)(()=>{\n        var _user_user;\n        async function getDocumentsByQuery(collectionName, field, operator, value) {\n            if (value != undefined) {\n                console.log(value);\n                const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_6__.db, collectionName), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.where)(field, operator, value));\n                console.log(firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.query);\n                const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.getDocs)(q);\n                querySnapshot.forEach((doc)=>{\n                    console.log(doc.id, \" => \", doc.data());\n                    setPlayerInfo(doc.data());\n                });\n            }\n        }\n        if (user != null) getDocumentsByQuery(\"Users\", \"email\", \"==\", user === null || user === void 0 ? void 0 : (_user_user = user.user) === null || _user_user === void 0 ? void 0 : _user_user.email);\n    }, [\n        user\n    ]);\n    // console.log(user.uid)\n    (0,react__WEBPACK_IMPORTED_MODULE_5__.useEffect)(()=>{\n        async function getDocumentsWithUserId(userId) {\n            const collectionRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_6__.db, \"Chats\"); // Replace with your collection name\n            // Create a query to find documents where participants array contains the userId\n            if (userId) {\n                const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.query)(collectionRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.where)(\"participants\", \"array-contains\", userId));\n                try {\n                    // Execute the query\n                    const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.getDocs)(q);\n                    // Get the total count of documents\n                    const totalDocuments = querySnapshot.size;\n                    console.log(\"Total documents with user ID \".concat(userId, \":\"), totalDocuments);\n                    const newChats = [];\n                    // Optionally, loop through documents if you need to access them\n                    querySnapshot.forEach((doc)=>{\n                        console.log(doc.id, \" => \", doc.data());\n                        newChats.push({\n                            \"data\": doc.data(),\n                            \"chatId\": doc.id\n                        });\n                    // setChats(...chats,doc.data().chat);\n                    });\n                    // setChats(querySnapshot);\n                    setChats((prevChats)=>[\n                            ...prevChats,\n                            ...newChats\n                        ]);\n                    return totalDocuments;\n                } catch (error) {\n                    console.error(\"Error fetching documents:\", error);\n                }\n            }\n        }\n        const userId = user === null || user === void 0 ? void 0 : user.uid; // Replace with the user ID you're searching for\n        getDocumentsWithUserId(userId);\n    }, [\n        user\n    ]);\n    const [profileId, setProfileId] = react__WEBPACK_IMPORTED_MODULE_5___default().useState(\"\");\n    function selectContact(id, chatId) {\n        console.log(\"App mein hu mai\", id, chatId);\n        setProfileId(id);\n        setCurrChat(chatId);\n    }\n    const [refinedChat, setRefinedChat] = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)([]);\n    async function findChatBetweenTwoUsers(userId, otherUser) {\n        const chatRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_6__.db, \"Chats\"); // The collection where your chat data is stored\n        // First, query the chats where the participants array contains userId1\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.query)(chatRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.where)(\"participants\", \"array-contains\", userId));\n        try {\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.getDocs)(q);\n            let chatExists = null;\n            // Now, filter the results to find chats that also contain userId2 in participants\n            querySnapshot.forEach((doc)=>{\n                const data = doc.data();\n                if (data.participants.includes(otherUser)) {\n                    chatExists = doc; // This is the chat document where both userId1 and userId2 are participants\n                }\n            });\n            if (chatExists) {\n                setCurrChat(chatExists.id);\n                console.log(\"Chat found between the two users:\", chatExists.id);\n                return chatExists.id; // Return the chat document ID or data as needed\n            } else {\n                console.log(\"No chat found between the two users.\");\n                const newChatDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.addDoc)(chatRef, {\n                    participants: [\n                        userId,\n                        otherUser\n                    ],\n                    chat: [],\n                    createdAt: new Date() // Optionally, add a timestamp\n                });\n                router.push(router.asPath);\n                console.log(\"New chat created with ID:\", newChatDoc.id);\n                setCurrChat(newChatDoc.id);\n                return newChatDoc.id;\n            // return null;\n            }\n        } catch (error) {\n            console.error(\"Error finding chat between users:\", error);\n        }\n    }\n    function searchChat(opponentId) {\n        findChatBetweenTwoUsers(user === null || user === void 0 ? void 0 : user.uid, opponentId);\n    }\n    // useEffect(()=>{\n    //   if(chats!=null)\n    // {  \n    //   console.log(chats);\n    //   chats.map((obj)=>{\n    //   console.log(obj);\n    //   if(obj!==undefined)\n    //     setRefinedChat([...refinedChat,obj])\n    //   })\n    // }\n    // },[chats])\n    const auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_7__.getAuth)();\n    // const [user, setUser] = useState(\"\");\n    (0,react__WEBPACK_IMPORTED_MODULE_5__.useEffect)(()=>{\n        const unsubscribe = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_7__.onAuthStateChanged)(auth, (currentUser)=>{\n            setUser(currentUser);\n        });\n        // console.log(userFirebase);\n        return ()=>unsubscribe();\n    }, []);\n    console.log(chats);\n    const [searchUser, setSearchUser] = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(false);\n    function newChat() {\n        setSearchUser((prev)=>!prev);\n        setNewGroup(false);\n    // router.push(\"/newChat\")\n    }\n    console.log(refinedChat);\n    const [searchTerm, setSearchTerm] = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)(\"\"); // Holds the input from the user\n    const [availableUsers, setAvailableUsers] = (0,react__WEBPACK_IMPORTED_MODULE_5__.useState)([]); // Holds the list of matching users\n    (0,react__WEBPACK_IMPORTED_MODULE_5__.useEffect)(()=>{\n        const searchUsers = async (search)=>{\n            if (search) {\n                const usersRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_6__.db, \"Users\");\n                // Create a query to find usernames that start with or contain the search term\n                const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.query)(usersRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.where)(\"name\", \">=\", search), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.where)(\"name\", \"<=\", search + \"\"));\n                try {\n                    const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.getDocs)(q);\n                    const users = [];\n                    querySnapshot.forEach((doc)=>{\n                        if (doc.id != (user === null || user === void 0 ? void 0 : user.uid)) users.push({\n                            \"data\": doc.data(),\n                            \"id\": doc.id\n                        }); // Push each matching user into the array\n                    });\n                    setAvailableUsers(users); // Update the state with the matching users\n                } catch (error) {\n                    console.error(\"Error fetching users:\", error);\n                }\n            } else {\n                setAvailableUsers([]); // Clear the list if the search input is empty\n            }\n        };\n        searchUsers(searchTerm);\n    }, [\n        searchTerm\n    ]); // Runs every time the search term changes\n    const [processedChats, setProcessedChats] = react__WEBPACK_IMPORTED_MODULE_5___default().useState([]);\n    const [newGroup, setNewGroup] = react__WEBPACK_IMPORTED_MODULE_5___default().useState(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_5__.useEffect)(()=>{\n        const modifyChats = async ()=>{\n            try {\n                // Using Promise.all to handle async map operation\n                const updatedChats = await Promise.all(chats.map(async (cont)=>{\n                    const id = cont.chatId;\n                    const receiverArray = cont.data.participants.filter((pid)=>pid !== (user === null || user === void 0 ? void 0 : user.uid));\n                    const receiver = receiverArray[0]; // Assuming only one receiver\n                    // Assuming getUserNameById is async and fetches the username\n                    const pair = await getUserNameById(receiver);\n                    // console.log(profilePic)\n                    return {\n                        \"id\": pair.id,\n                        \"name\": pair.name,\n                        \"chat\": cont.chat,\n                        \"profilePic\": pair.pic,\n                        \"chatId\": id\n                    };\n                }));\n                // Update the state with modified chats\n                setProcessedChats(updatedChats);\n            } catch (error) {\n                console.error(\"Error modifying chats:\", error);\n            }\n        };\n        modifyChats();\n    }, [\n        chats,\n        newGroup\n    ]);\n    async function getUserNameById(receiver) {\n        try {\n            // Reference to the document with the given userId in the \"users\" collection\n            const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_6__.db, \"Users\", receiver);\n            // Fetch the document\n            const userDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_10__.getDoc)(userRef);\n            if (userDoc.exists()) {\n                // Extract and return the user's name from the document data\n                const userData = userDoc.data();\n                // console.log(userDoc.id);\n                const id = userDoc.id;\n                const name = userData.name;\n                const pic = userData.profilePicture;\n                const pair = {\n                    \"id\": id,\n                    \"name\": name,\n                    \"pic\": pic\n                };\n                // console.log(pic)\n                return pair;\n            } else {\n                console.log(\"No such user!\");\n                return null;\n            }\n        } catch (error) {\n            console.error(\"Error fetching user:\", error);\n        }\n    }\n    function handleSearch(search) {\n        console.log(search);\n        setSearchTerm(search);\n    // searchUsers(search);\n    }\n    function newGrpFunc() {\n        setNewGroup((prev)=>!prev);\n        setSearchUser(false);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"h-screen w-screen flex flex-col \",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_userContext__WEBPACK_IMPORTED_MODULE_9__.UserProvider, {\n            user: user,\n            setUser: setUser,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_navbar__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n                    fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/App.jsx\",\n                    lineNumber: 275,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_split__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    sizes: [\n                        30,\n                        70\n                    ],\n                    direction: \"horizontal\",\n                    className: \"flex h-full \",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_components_sidebar__WEBPACK_IMPORTED_MODULE_2___default()), {\n                            contact: contact,\n                            selectContact: selectContact,\n                            chats: chats,\n                            userId: user != null ? user === null || user === void 0 ? void 0 : user.uid : \"\",\n                            searchUser: searchUser,\n                            newChat: newChat,\n                            newGrpFunc: newGrpFunc\n                        }, void 0, false, {\n                            fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/App.jsx\",\n                            lineNumber: 279,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_chat__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            contact: contact,\n                            currChat: currChat,\n                            profileId: profileId,\n                            chats: chats,\n                            userId: user != null ? user === null || user === void 0 ? void 0 : user.uid : \"\"\n                        }, void 0, false, {\n                            fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/App.jsx\",\n                            lineNumber: 287,\n                            columnNumber: 11\n                        }, this),\n                        searchUser && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_searchUser__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                            handleSearch: handleSearch,\n                            searchAnswers: availableUsers,\n                            searchChat: searchChat\n                        }, void 0, false, {\n                            fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/App.jsx\",\n                            lineNumber: 293,\n                            columnNumber: 26\n                        }, this),\n                        newGroup && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_newGroup__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                            processedChats: processedChats,\n                            userId: user != null ? user === null || user === void 0 ? void 0 : user.uid : \"\"\n                        }, void 0, false, {\n                            fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/App.jsx\",\n                            lineNumber: 297,\n                            columnNumber: 25\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/App.jsx\",\n                    lineNumber: 278,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/App.jsx\",\n            lineNumber: 274,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/App.jsx\",\n        lineNumber: 273,\n        columnNumber: 5\n    }, this);\n}\n_s(LandingPage, \"UNKSlj4YiiHhFnbtWXxYn9wlj84=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_8__.useRouter\n    ];\n});\n_c = LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/App.jsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/sidebar.jsx":
/*!************************************!*\
  !*** ./app/components/sidebar.jsx ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\";\n// import Image from \"next/image\";\n// import React from \"react\";\n// import { db } from \"../firebase\";\n// import { doc, getDoc } from \"firebase/firestore\";\n// import { useEffect } from \"react\";\n// import { Button, TextField } from \"@mui/material\";\n// import { useRouter } from \"next/navigation\";\n// import { useState } from \"react\";\n// import SearchUser from \"./searchUser\";\n// export default function (props) {\n//     //    const modArray=props.contact.map()\n//     const userId = props.userId;\n//     async function getUserNameById(receiver) {\n//         try {\n//             // Reference to the document with the given userId in the \"users\" collection\n//             const userRef = doc(db, \"Users\", receiver);\n//             // Fetch the document\n//             const userDoc = await getDoc(userRef);\n//             if (userDoc.exists()) {\n//                 // Extract and return the user's name from the document data\n//                 const userData = userDoc.data();\n//                 // console.log(userDoc.id);\n//                 const id = userDoc.id;\n//                 const name = userData.name;\n//                 const pic = userData.profilePicture;\n//                 const pair = {\"id\":id, \"name\": name, \"pic\": pic };\n//                 // console.log(pic)\n//                 return pair;\n//             } else {\n//                 console.log(\"No such user!\");\n//                 return null;\n//             }\n//         } catch (error) {\n//             console.error(\"Error fetching user:\", error);\n//         }\n//     }\n//     const [processedChats, setProcessedChats] = React.useState([]);\n//     //   useEffect(()=>{\n//     //     const modChat=props.chats.map((cont,index)=>{\n//     //         const receiver=cont.participants.filter(pid=>pid!=userId)\n//     //         const name=getUserNameById(receiver);\n//     //         return ({\"name\":name,\"chat\":cont.chat});\n//     //     })\n//     //     setProcessedChats(modChat);\n//     //     console.log(modChat);\n//     //   },[props.chats])\n//     // import { useState, useEffect } from 'react';\n//     useEffect(() => {\n//         const modifyChats = async () => {\n//             try {\n//                 // Using Promise.all to handle async map operation\n//                 const updatedChats = await Promise.all(\n//                     props.chats.map(async (cont) => {\n//                         const groupname=cont?.groupName;\n//                         const id=cont.chatId;\n//                         const receiverArray = cont.data.participants.filter(pid => pid !== userId);\n//                         const receiver = receiverArray[0]; // Assuming only one receiver\n//                         // Assuming getUserNameById is async and fetches the username\n//                         const pair = await getUserNameById(receiver);\n//                         // console.log(profilePic)\n//                         return { \"id\":pair.id,\"name\": pair.name, \"chat\": cont.chat, \"profilePic\": pair.pic ,\"chatId\":id};\n//                     })\n//                 );\n//                 // Update the state with modified chats\n//                 setProcessedChats(updatedChats);\n//             } catch (error) {\n//                 console.error(\"Error modifying chats:\", error);\n//             }\n//         };\n//         modifyChats();\n//     }, [props.chats, userId]);\n//     const [search,setSearch]=React.useState(\"\");\n//     function handleSubmit(e) {\n//         // console.log(search);\n//         setSearch(\"\");\n//     }\n//     function handleKeyDown(e){\n//         if(e.key==\"Enter\")\n//             handleSubmit();\n//     }\n//     const router=useRouter();\n//     return (\n//         <div className=\"bg-black p-2 m-1 h-full rounded-md \">\n//             <div className=\"flex flex-row justify-around m-2 p-2\">\n//                 <button className=\"bg-white rounded-md p-1\" onClick={props.newChat}> New Chat</button>\n//                 <button className=\"bg-white rounded-md p-1\" onClick={props.newGrpFunc}> New Group</button>\n//             </div>\n//             <h1 className=\"text-white m-2 p-2 align-center\">Your Chats</h1>\n//             <div className=\"flex flex-row justify-around\">\n//                 <TextField \n//                 name=\"search\"\n//                 value={search}\n//                 label=\"Search\"\n//                 onChange={(e)=>setSearch(e.target.value)}\n//                 onKeyDown={handleKeyDown}\n//                 className=\"rounded-md p-1 m-2 w-3/4 bg-white\"\n//                  placeholder=\"Search\" />\n//                 <button className=\"bg-blue-500 p-2 m-2 rounded-lg hover:bg-blue-300\">Go</button>\n//             </div>\n//             <ul className=\"cursor-pointer \" >\n//                  {console.log(processedChats)} \n//                 {processedChats.length > 0 && processedChats.map((cont, index) => {\n//                     //   const groupName=cont?.groupName;\n//                     //   if(!groupName){\n//                     //     const receiver=cont.participants.filter(pid=>pid!=userId)\n//                     // const name=getUserNameById(receiver);\n//                     return <li key={index} className=\"m-2 p-1 rounded-md border-orange-400 border-2 bg-slate-900 text-orange-400\" onClick={() => props.selectContact(cont.id,cont.chatId)}>\n//                         <div className=\"flex  justify-around max-h-10 \">\n//                             {/* {console.log(cont.profilePic)} */}\n//                             <Image className=\"rounded-full\" src={cont.profilePic}  height={50} width={50} alt=\"Profile\" />\n//                             <h3 className=\"text-xl\">{cont.name}</h3>\n//                         </div>\n//                     </li>\n//                 })}\n//                 {/* <li onClick={() => console.log(\"Contact 1 clicked\")}>Contact 1</li>\n//                 <li>Contact 2</li> */}\n//             </ul>\n//         </div>\n//     )\n// }\n// \"use client\";\n// import Image from \"next/image\";\n// import React, { useEffect, useState } from \"react\";\n// import { db } from \"../firebase\";\n// import { doc, getDoc } from \"firebase/firestore\";\n// import { Button, TextField } from \"@mui/material\";\n// import { useRouter } from \"next/navigation\";\n// import SearchUser from \"./searchUser\";\n// export default function (props) {\n//     const userId = props.userId;\n//     // Function to get user details by ID\n//     async function getUserNameById(receiver) {\n//         try {\n//             const userRef = doc(db, \"Users\", receiver);\n//             const userDoc = await getDoc(userRef);\n//             if (userDoc.exists()) {\n//                 const userData = userDoc.data();\n//                 const id = userDoc.id;\n//                 const name = userData.name;\n//                 const pic = userData.profilePicture;\n//                 return { id, name, pic };\n//             } else {\n//                 console.log(\"No such user!\");\n//                 return null;\n//             }\n//         } catch (error) {\n//             console.error(\"Error fetching user:\", error);\n//         }\n//     }\n//     const [processedChats, setProcessedChats] = useState([]);\n//     // Modify chats list based on whether it's a group or individual chat\n//     useEffect(() => {\n//         const modifyChats = async () => {\n//             try {\n//                 const updatedChats = await Promise.all(\n//                     props.chats.map(async (cont) => {\n//                         const id = cont.chatId;\n//                         if (cont.data.groupName) {\n//                             // It's a group chat, so use groupName instead of individual names\n//                             return {\n//                                 id,\n//                                 name: cont.data.groupName,  // Use group name for display\n//                                 chat: cont.data.chat,\n//                                 profilePic: \"/group-icon.png\",  // Default group icon\n//                                 isGroup: true,\n//                             };\n//                         } else {\n//                             // It's a one-on-one chat\n//                             const receiverArray = cont.data.participants.filter(\n//                                 (pid) => pid !== userId\n//                             );\n//                             const receiver = receiverArray[0]; // Assuming only one receiver\n//                             const pair = await getUserNameById(receiver);\n//                             return {\n//                                 id: pair.id,\n//                                 name: pair.name,\n//                                 chat: cont.data.chat,\n//                                 profilePic: pair.pic,\n//                                 isGroup: false,\n//                             };\n//                         }\n//                     })\n//                 );\n//                 setProcessedChats(updatedChats);\n//             } catch (error) {\n//                 console.error(\"Error modifying chats:\", error);\n//             }\n//         };\n//         modifyChats();\n//     }, [props.chats, userId]);\n//     const [search, setSearch] = useState(\"\");\n//     function handleSubmit(e) {\n//         setSearch(\"\");\n//     }\n//     function handleKeyDown(e) {\n//         if (e.key === \"Enter\") handleSubmit();\n//     }\n//     const router = useRouter();\n//     return (\n//         <div className=\"bg-black p-2 m-1 h-full rounded-md \">\n//             <div className=\"flex flex-row justify-around m-2 p-2\">\n//                 <button className=\"bg-white rounded-md p-1\" onClick={props.newChat}>\n//                     New Chat\n//                 </button>\n//                 <button className=\"bg-white rounded-md p-1\" onClick={props.newGrpFunc}>\n//                     New Group\n//                 </button>\n//             </div>\n//             <h1 className=\"text-white m-2 p-2 align-center\">Your Chats</h1>\n//             <div className=\"flex flex-row justify-around\">\n//                 <TextField\n//                     name=\"search\"\n//                     value={search}\n//                     label=\"Search\"\n//                     onChange={(e) => setSearch(e.target.value)}\n//                     onKeyDown={handleKeyDown}\n//                     className=\"rounded-md p-1 m-2 w-3/4 bg-white\"\n//                     placeholder=\"Search\"\n//                 />\n//                 <button className=\"bg-blue-500 p-2 m-2 rounded-lg hover:bg-blue-300\">\n//                     Go\n//                 </button>\n//             </div>\n//             {console.log(processedChats)}\n//             <ul className=\"cursor-pointer\">\n//                 {processedChats.length > 0 &&\n//                     processedChats.map((cont, index) => {\n//                         return (\n//                             <li\n//                                 key={index}\n//                                 className=\"m-2 p-1 rounded-md border-orange-400 border-2 bg-slate-900 text-orange-400\"\n//                                 onClick={() => props.selectContact(cont.id, cont.chatId)}\n//                             >\n//                                 <div className=\"flex justify-around max-h-10\">\n//                                     <Image\n//                                         className=\"rounded-full\"\n//                                         src={cont.profilePic}\n//                                         height={50}\n//                                         width={50}\n//                                         alt=\"Profile\"\n//                                     />\n//                                     <h3 className=\"text-xl\">{cont.name}</h3>\n//                                 </div>\n//                             </li>\n//                         );\n//                     })}\n//             </ul>\n//         </div>\n//     );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/sidebar.jsx\n"));

/***/ })

});