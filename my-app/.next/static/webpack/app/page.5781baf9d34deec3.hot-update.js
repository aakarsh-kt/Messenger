"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/chat.jsx":
/*!*********************************!*\
  !*** ./app/components/chat.jsx ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ChatComponent; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _profile_jsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./profile.jsx */ \"(app-pages-browser)/./app/components/profile.jsx\");\n/* harmony import */ var _barrel_optimize_names_TextField_mui_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=TextField!=!@mui/material */ \"(app-pages-browser)/./node_modules/@mui/material/TextField/TextField.js\");\n/* harmony import */ var _messages_jsx__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./messages.jsx */ \"(app-pages-browser)/./app/components/messages.jsx\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../firebase.js */ \"(app-pages-browser)/./app/firebase.js\");\n// \"use-client\"\n// import React, { useContext } from \"react\";\n// import Profile from \"./profile.jsx\";\n// import { UserContext, useUser } from \"../userContext.jsx\";\n// import { TextField } from \"@mui/material\";\n// import Messages from \"./messages.jsx\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\n// import 'react-perfect-scrollbar/dist/css/styles.css';\n// import { useEffect } from \"react\";\n// import { arrayUnion, doc, getDoc, updateDoc } from \"firebase/firestore\";\n// import { db } from \"../firebase.js\";\n// export default function(props) {\n//     const userContext = useUser();\n//     const [processedChats, setProcessedChats] = React.useState([]);\n//     const [user, setUser] = React.useState(userContext);\n//     const otherUser=props.otherUser;\n//     React.useEffect(() => {\n//         setUser(userContext);\n//     }, [userContext]);\n//     // const {user,setUser}=useContext(UserContext);\n//     async function getUserNameById(receiver) {\n//         try {\n//             // Reference to the document with the given userId in the \"users\" collection\n//             const userRef = doc(db, \"Users\", receiver);\n//             // Fetch the document\n//             const userDoc = await getDoc(userRef);\n//             if (userDoc.exists()) {\n//                 // Extract and return the user's name from the document data\n//                 const userData = userDoc.data();\n//                 console.log(userDoc.id);\n//                 const id = userDoc.id;\n//                 const name = userData.name;\n//                 const pic = userData.profilePicture;\n//                 const pair = {\"id\":id, \"name\": name, \"pic\": pic };\n//                 console.log(pic)\n//                 return pair;\n//             } else {\n//                 console.log(\"No such user!\");\n//                 return null;\n//             }\n//         } catch (error) {\n//             console.error(\"Error fetching user:\", error);\n//         }\n//     }\n//     const userId=props.userId;\n//     useEffect(() => {\n//         const modifyChats = async () => {\n//             try {\n//                 // Using Promise.all to handle async map operation\n//                 const updatedChats = await Promise.all(\n//                     props.chats.map(async (cont) => {\n//                         const receiverArray = cont.data.participants.filter(pid => pid !== userId);\n//                         const receiver = receiverArray[0]; // Assuming only one receiver\n//                         // Assuming getUserNameById is async and fetches the username\n//                         const pair = await getUserNameById(receiver);\n//                         // console.log(profilePic)\n//                         return { \"id\":pair.id,\"name\": pair.name, \"chat\": cont.chat, \"profilePic\": pair.pic };\n//                     })\n//                 );\n//                 // Update the state with modified chats\n//                 setProcessedChats(updatedChats);\n//             } catch (error) {\n//                 console.error(\"Error modifying chats:\", error);\n//             }\n//         };\n//         modifyChats();\n//     }, [props.chats, props.userId]);\n//     const [currDisplayUser,setCurrDisplayUser]=React.useState(\"\");\n//     useEffect(() => {\n//         const getUser = async () => {\n//             try {\n//                 // Await the result of the async function getUserNameById\n//                 const updatedUser = await getUserNameById(props.profileId);\n//                 console.log(updatedUser);\n//                 // Set the fetched user as the current display user\n//                 setCurrDisplayUser(updatedUser);\n//             } catch (error) {\n//                 console.error(\"Error updating user:\", error);\n//             }\n//         };\n//         // Call the async function\n//         getUser();\n//     }, [props.profileId]); // Re-run the effect if profileId changes\n//     const [messages, setMessages] = React.useState([\n//         { \"msg\": \"Hi My Main man\", \"id\": \"1\" },\n//         { \"msg\": \"Hi my Nigga\", \"id\": \"2\" },\n//         { \"msg\": \"Who you calling Nigga\", \"id\": \"1\" },\n//         { \"msg\": \"Hi My Main man\", \"id\": \"1\" },\n//         { \"msg\": \"Hi my Nigga\", \"id\": \"2\" },\n//         { \"msg\": \"Who you calling Nigga\", \"id\": \"1\" },\n//         { \"msg\": \"Hi My Main man\", \"id\": \"1\" },\n//         { \"msg\": \"Who you calling Nigga\", \"id\": \"1\" },\n//         { \"msg\": \"Hi My Main man\", \"id\": \"1\" },\n//         { \"msg\": \"Hi my Nigga\", \"id\": \"2\" },\n//         { \"msg\": \"Who you calling Nigga\", \"id\": \"1\" },\n//         // Add more messages here...\n//     ]);\n//     const [currMsg, setCurrMsg] = React.useState(\"\");\n//     function handleChange(event) {\n//         setCurrMsg(event.target.value);\n//     }\n//     function handleSubmit(e) {\n//         if(currMsg.length>0)\n//        { \n//         const temp = { \"msg\": currMsg, \"id\": userId };\n//         addMessageToChat(props.currChat,currMsg,userId);\n//         // setMessages(messages.concat(temp));\n//         setCurrMsg(\"\");\n//     }\n//     }\n//     async function addMessageToChat (chatId, messageText, senderId) {\n//         try {\n//             console.log(\"I am here\")\n//           // Reference to the specific chat document\n//           const chatRef = doc(db, \"Chats\", chatId);\n//           // Create the message object to be added\n//           const newMessage = {\n//             sender: senderId,\n//             msg: messageText,\n//             timestamp: new Date(), // Add timestamp if needed\n//           };\n//           // Update the chat document with the new message added to the messages array\n//           await updateDoc(chatRef, {\n//             chat: arrayUnion(newMessage), // Adds the new message to the messages array\n//           });\n//           console.log(\"Message added successfully!\");\n//         } catch (error) {\n//           console.error(\"Error adding message:\", error);\n//         }\n//       };\n//     function handleKeyDown(event) {\n//         if (event.key === \"Enter\")\n//             handleSubmit();\n//     }\n//     return (\n//         <div className=\"bg-slate-800 flex flex-col h-full p-1 m-1 rounded-md\">\n//             {console.log(processedChats)}\n//             {console.log(props.chats)}\n//             <Profile currDisplayUser={currDisplayUser} />\n//             {/* <PerfectScrollbar> */}\n//             {/* <h1>{props.currChat}</h1> */}\n//             <div className=\"flex-grow overflow-hidden\">\n//                 <Messages messages={messages} \n//                 userId={userId}\n//                     currChat={props.currChat}\n//                 />\n//             </div>\n//             {/* </PerfectScrollbar>  */}\n//             <div className=\"flex items-center gap-2 mt-auto p-2 bg-slate-700\">\n//                 <TextField \n//                     className=\"bg-slate-200 rounded-full w-full drop-shadow-md\" \n//                     id=\"outlined-basic\" \n//                     label=\"Message\"\n//                     value={currMsg}\n//                     variant=\"outlined\" \n//                     onChange={handleChange}\n//                     onKeyDown={handleKeyDown} \n//                 />\n//                 <button className=\"bg-green-500 rounded-full p-2 m-2\" onClick={handleSubmit}>\n//                     Send\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction ChatComponent(props) {\n    _s();\n    const [processedChats, setProcessedChats] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currDisplayUser, setCurrDisplayUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currMsg, setCurrMsg] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const userId = props.userId;\n    const otherUser = props.otherUser;\n    const chatId = props.currChat;\n    // WebSocket initialization\n    const [socket, setSocket] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Connect to the WebSocket server\n        const ws = new WebSocket(\"ws://your-websocket-server-url\"); // Replace with your WebSocket server URL\n        setSocket(ws);\n        ws.onopen = ()=>{\n            console.log(\"Connected to WebSocket server.\");\n        };\n        ws.onmessage = (event)=>{\n            const receivedMessage = JSON.parse(event.data);\n            if (receivedMessage.chatId === chatId) {\n                setMessages((prevMessages)=>[\n                        ...prevMessages,\n                        receivedMessage.message\n                    ]);\n            }\n        };\n        ws.onclose = ()=>{\n            console.log(\"Disconnected from WebSocket server.\");\n        };\n        return ()=>{\n            ws.close();\n        };\n    }, [\n        chatId\n    ]);\n    // Get user data\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const getUser = async ()=>{\n            const userDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.getDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.doc)(_firebase_js__WEBPACK_IMPORTED_MODULE_5__.db, \"Users\", props.profileId));\n            if (userDoc.exists()) {\n                const userData = userDoc.data();\n                setCurrDisplayUser(userData.name);\n            }\n        };\n        getUser();\n    }, [\n        props.profileId\n    ]);\n    // Get messages from Firebase\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const modifyChats = async ()=>{\n            const updatedChats = await Promise.all(props.chats.map(async (cont)=>{\n                const receiverArray = cont.data.participants.filter((pid)=>pid !== userId);\n                const receiver = receiverArray[0];\n                const pair = await getUserNameById(receiver);\n                return {\n                    \"id\": pair.id,\n                    \"name\": pair.name,\n                    \"chat\": cont.chat,\n                    \"profilePic\": pair.pic\n                };\n            }));\n            setProcessedChats(updatedChats);\n        };\n        modifyChats();\n    }, [\n        props.chats,\n        props.userId\n    ]);\n    const handleSubmit = ()=>{\n        if (currMsg.length > 0) {\n            const newMessage = {\n                chatId: chatId,\n                message: {\n                    senderId: userId,\n                    msg: currMsg,\n                    timestamp: new Date()\n                }\n            };\n            // Send message through WebSocket\n            if (socket) {\n                socket.send(JSON.stringify(newMessage));\n            }\n            // Add message to Firebase\n            addMessageToChat(chatId, currMsg, userId);\n            setCurrMsg(\"\");\n        }\n    };\n    async function addMessageToChat(chatId, messageText, senderId) {\n        try {\n            const chatRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.doc)(_firebase_js__WEBPACK_IMPORTED_MODULE_5__.db, \"Chats\", chatId);\n            const newMessage = {\n                sender: senderId,\n                msg: messageText,\n                timestamp: new Date()\n            };\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.updateDoc)(chatRef, {\n                chat: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_4__.arrayUnion)(newMessage)\n            });\n        } catch (error) {\n            console.error(\"Error adding message:\", error);\n        }\n    }\n    function handleKeyDown(event) {\n        if (event.key === \"Enter\") {\n            handleSubmit();\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-slate-800 flex flex-col h-full p-1 m-1 rounded-md\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_profile_jsx__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                currDisplayUser: currDisplayUser\n            }, void 0, false, {\n                fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/components/chat.jsx\",\n                lineNumber: 306,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex-grow overflow-hidden\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_messages_jsx__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    messages: messages,\n                    userId: userId,\n                    currChat: props.currChat\n                }, void 0, false, {\n                    fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/components/chat.jsx\",\n                    lineNumber: 308,\n                    columnNumber: 17\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/components/chat.jsx\",\n                lineNumber: 307,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center gap-2 mt-auto p-2 bg-slate-700\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_TextField_mui_material__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        className: \"bg-slate-200 rounded-full w-full drop-shadow-md\",\n                        label: \"Message\",\n                        value: currMsg,\n                        variant: \"outlined\",\n                        onChange: (e)=>setCurrMsg(e.target.value),\n                        onKeyDown: handleKeyDown\n                    }, void 0, false, {\n                        fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/components/chat.jsx\",\n                        lineNumber: 311,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"bg-green-500 rounded-full p-2 m-2\",\n                        onClick: handleSubmit,\n                        children: \"Send\"\n                    }, void 0, false, {\n                        fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/components/chat.jsx\",\n                        lineNumber: 319,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/components/chat.jsx\",\n                lineNumber: 310,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/akarsh/Desktop/Projects/Texter/my-app/app/components/chat.jsx\",\n        lineNumber: 305,\n        columnNumber: 9\n    }, this);\n}\n_s(ChatComponent, \"ugxGf4H3a8XQD/cJpImu49Ug+XM=\");\n_c = ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL2NoYXQuanN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLGVBQWU7QUFFZiw2Q0FBNkM7QUFDN0MsdUNBQXVDO0FBQ3ZDLDZEQUE2RDtBQUM3RCw2Q0FBNkM7QUFDN0MseUNBQXlDO0FBQ3pDLDBEQUEwRDtBQUMxRCx3REFBd0Q7QUFDeEQscUNBQXFDO0FBQ3JDLDJFQUEyRTtBQUMzRSx1Q0FBdUM7QUFFdkMsbUNBQW1DO0FBQ25DLHFDQUFxQztBQUNyQyxzRUFBc0U7QUFDdEUsMkRBQTJEO0FBQzNELHVDQUF1QztBQUN2Qyw4QkFBOEI7QUFDOUIsZ0NBQWdDO0FBQ2hDLHlCQUF5QjtBQUN6Qix1REFBdUQ7QUFDdkQsaURBQWlEO0FBQ2pELGdCQUFnQjtBQUNoQiwyRkFBMkY7QUFDM0YsMERBQTBEO0FBRTFELG9DQUFvQztBQUNwQyxxREFBcUQ7QUFFckQsc0NBQXNDO0FBQ3RDLCtFQUErRTtBQUMvRSxtREFBbUQ7QUFDbkQsMkNBQTJDO0FBQzNDLHlDQUF5QztBQUN6Qyw4Q0FBOEM7QUFDOUMsdURBQXVEO0FBQ3ZELHFFQUFxRTtBQUNyRSxtQ0FBbUM7QUFDbkMsK0JBQStCO0FBQy9CLHVCQUF1QjtBQUN2QixnREFBZ0Q7QUFDaEQsK0JBQStCO0FBQy9CLGdCQUFnQjtBQUNoQiw0QkFBNEI7QUFDNUIsNERBQTREO0FBQzVELFlBQVk7QUFDWixRQUFRO0FBQ1IsaUNBQWlDO0FBQ2pDLHdCQUF3QjtBQUN4Qiw0Q0FBNEM7QUFDNUMsb0JBQW9CO0FBQ3BCLHFFQUFxRTtBQUNyRSwwREFBMEQ7QUFDMUQsd0RBQXdEO0FBQ3hELHNHQUFzRztBQUN0RywyRkFBMkY7QUFFM0Ysd0ZBQXdGO0FBQ3hGLHdFQUF3RTtBQUN4RSxxREFBcUQ7QUFDckQsZ0hBQWdIO0FBQ2hILHlCQUF5QjtBQUN6QixxQkFBcUI7QUFFckIsMERBQTBEO0FBQzFELG1EQUFtRDtBQUNuRCxnQ0FBZ0M7QUFDaEMsa0VBQWtF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QWlCQTs7Ozs7OzBCQUMxQiw4REFBQ2tFO2dCQUFJQyxXQUFVOzBCQUNYLDRFQUFDN0UscURBQVFBO29CQUFDWSxVQUFVQTtvQkFBVUksUUFBUUE7b0JBQVFHLFVBQVVaLE1BQU1ZLFFBQVE7Ozs7Ozs7Ozs7OzBCQUUxRSw4REFBQ3lEO2dCQUFJQyxXQUFVOztrQ0FDWCw4REFBQzlFLHFGQUFTQTt3QkFDTjhFLFdBQVU7d0JBQ1ZDLE9BQU07d0JBQ05DLE9BQU9qRTt3QkFDUGtFLFNBQVE7d0JBQ1JDLFVBQVUsQ0FBQ0MsSUFBTW5FLFdBQVdtRSxFQUFFQyxNQUFNLENBQUNKLEtBQUs7d0JBQzFDSyxXQUFXVjs7Ozs7O2tDQUVmLDhEQUFDVzt3QkFBT1IsV0FBVTt3QkFBb0NTLFNBQVMxQjtrQ0FBYzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTTdGO0dBbEl3QnREO0tBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9jb21wb25lbnRzL2NoYXQuanN4P2Q4OWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gXCJ1c2UtY2xpZW50XCJcblxuLy8gaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcbi8vIGltcG9ydCBQcm9maWxlIGZyb20gXCIuL3Byb2ZpbGUuanN4XCI7XG4vLyBpbXBvcnQgeyBVc2VyQ29udGV4dCwgdXNlVXNlciB9IGZyb20gXCIuLi91c2VyQ29udGV4dC5qc3hcIjtcbi8vIGltcG9ydCB7IFRleHRGaWVsZCB9IGZyb20gXCJAbXVpL21hdGVyaWFsXCI7XG4vLyBpbXBvcnQgTWVzc2FnZXMgZnJvbSBcIi4vbWVzc2FnZXMuanN4XCI7XG4vLyBpbXBvcnQgUGVyZmVjdFNjcm9sbGJhciBmcm9tICdyZWFjdC1wZXJmZWN0LXNjcm9sbGJhcic7XG4vLyBpbXBvcnQgJ3JlYWN0LXBlcmZlY3Qtc2Nyb2xsYmFyL2Rpc3QvY3NzL3N0eWxlcy5jc3MnO1xuLy8gaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG4vLyBpbXBvcnQgeyBhcnJheVVuaW9uLCBkb2MsIGdldERvYywgdXBkYXRlRG9jIH0gZnJvbSBcImZpcmViYXNlL2ZpcmVzdG9yZVwiO1xuLy8gaW1wb3J0IHsgZGIgfSBmcm9tIFwiLi4vZmlyZWJhc2UuanNcIjtcblxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocHJvcHMpIHtcbi8vICAgICBjb25zdCB1c2VyQ29udGV4dCA9IHVzZVVzZXIoKTtcbi8vICAgICBjb25zdCBbcHJvY2Vzc2VkQ2hhdHMsIHNldFByb2Nlc3NlZENoYXRzXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcbi8vICAgICBjb25zdCBbdXNlciwgc2V0VXNlcl0gPSBSZWFjdC51c2VTdGF0ZSh1c2VyQ29udGV4dCk7XG4vLyAgICAgY29uc3Qgb3RoZXJVc2VyPXByb3BzLm90aGVyVXNlcjtcbi8vICAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuLy8gICAgICAgICBzZXRVc2VyKHVzZXJDb250ZXh0KTtcbi8vICAgICB9LCBbdXNlckNvbnRleHRdKTtcbi8vICAgICAvLyBjb25zdCB7dXNlcixzZXRVc2VyfT11c2VDb250ZXh0KFVzZXJDb250ZXh0KTtcbi8vICAgICBhc3luYyBmdW5jdGlvbiBnZXRVc2VyTmFtZUJ5SWQocmVjZWl2ZXIpIHtcbi8vICAgICAgICAgdHJ5IHtcbi8vICAgICAgICAgICAgIC8vIFJlZmVyZW5jZSB0byB0aGUgZG9jdW1lbnQgd2l0aCB0aGUgZ2l2ZW4gdXNlcklkIGluIHRoZSBcInVzZXJzXCIgY29sbGVjdGlvblxuLy8gICAgICAgICAgICAgY29uc3QgdXNlclJlZiA9IGRvYyhkYiwgXCJVc2Vyc1wiLCByZWNlaXZlcik7XG5cbi8vICAgICAgICAgICAgIC8vIEZldGNoIHRoZSBkb2N1bWVudFxuLy8gICAgICAgICAgICAgY29uc3QgdXNlckRvYyA9IGF3YWl0IGdldERvYyh1c2VyUmVmKTtcblxuLy8gICAgICAgICAgICAgaWYgKHVzZXJEb2MuZXhpc3RzKCkpIHtcbi8vICAgICAgICAgICAgICAgICAvLyBFeHRyYWN0IGFuZCByZXR1cm4gdGhlIHVzZXIncyBuYW1lIGZyb20gdGhlIGRvY3VtZW50IGRhdGFcbi8vICAgICAgICAgICAgICAgICBjb25zdCB1c2VyRGF0YSA9IHVzZXJEb2MuZGF0YSgpO1xuLy8gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXJEb2MuaWQpO1xuLy8gICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gdXNlckRvYy5pZDtcbi8vICAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0gdXNlckRhdGEubmFtZTtcbi8vICAgICAgICAgICAgICAgICBjb25zdCBwaWMgPSB1c2VyRGF0YS5wcm9maWxlUGljdHVyZTtcbi8vICAgICAgICAgICAgICAgICBjb25zdCBwYWlyID0ge1wiaWRcIjppZCwgXCJuYW1lXCI6IG5hbWUsIFwicGljXCI6IHBpYyB9O1xuLy8gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHBpYylcbi8vICAgICAgICAgICAgICAgICByZXR1cm4gcGFpcjtcbi8vICAgICAgICAgICAgIH0gZWxzZSB7XG4vLyAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJObyBzdWNoIHVzZXIhXCIpO1xuLy8gICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIHVzZXI6XCIsIGVycm9yKTtcbi8vICAgICAgICAgfVxuLy8gICAgIH1cbi8vICAgICBjb25zdCB1c2VySWQ9cHJvcHMudXNlcklkO1xuLy8gICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4vLyAgICAgICAgIGNvbnN0IG1vZGlmeUNoYXRzID0gYXN5bmMgKCkgPT4ge1xuLy8gICAgICAgICAgICAgdHJ5IHtcbi8vICAgICAgICAgICAgICAgICAvLyBVc2luZyBQcm9taXNlLmFsbCB0byBoYW5kbGUgYXN5bmMgbWFwIG9wZXJhdGlvblxuLy8gICAgICAgICAgICAgICAgIGNvbnN0IHVwZGF0ZWRDaGF0cyA9IGF3YWl0IFByb21pc2UuYWxsKFxuLy8gICAgICAgICAgICAgICAgICAgICBwcm9wcy5jaGF0cy5tYXAoYXN5bmMgKGNvbnQpID0+IHtcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY2VpdmVyQXJyYXkgPSBjb250LmRhdGEucGFydGljaXBhbnRzLmZpbHRlcihwaWQgPT4gcGlkICE9PSB1c2VySWQpO1xuLy8gICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVjZWl2ZXIgPSByZWNlaXZlckFycmF5WzBdOyAvLyBBc3N1bWluZyBvbmx5IG9uZSByZWNlaXZlclxuXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBc3N1bWluZyBnZXRVc2VyTmFtZUJ5SWQgaXMgYXN5bmMgYW5kIGZldGNoZXMgdGhlIHVzZXJuYW1lXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBwYWlyID0gYXdhaXQgZ2V0VXNlck5hbWVCeUlkKHJlY2VpdmVyKTtcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHByb2ZpbGVQaWMpXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBcImlkXCI6cGFpci5pZCxcIm5hbWVcIjogcGFpci5uYW1lLCBcImNoYXRcIjogY29udC5jaGF0LCBcInByb2ZpbGVQaWNcIjogcGFpci5waWMgfTtcbi8vICAgICAgICAgICAgICAgICAgICAgfSlcbi8vICAgICAgICAgICAgICAgICApO1xuXG4vLyAgICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSBzdGF0ZSB3aXRoIG1vZGlmaWVkIGNoYXRzXG4vLyAgICAgICAgICAgICAgICAgc2V0UHJvY2Vzc2VkQ2hhdHModXBkYXRlZENoYXRzKTtcbi8vICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIG1vZGlmeWluZyBjaGF0czpcIiwgZXJyb3IpO1xuLy8gICAgICAgICAgICAgfVxuLy8gICAgICAgICB9O1xuXG4vLyAgICAgICAgIG1vZGlmeUNoYXRzKCk7XG4vLyAgICAgfSwgW3Byb3BzLmNoYXRzLCBwcm9wcy51c2VySWRdKTtcbi8vICAgICBjb25zdCBbY3VyckRpc3BsYXlVc2VyLHNldEN1cnJEaXNwbGF5VXNlcl09UmVhY3QudXNlU3RhdGUoXCJcIik7XG4vLyAgICAgdXNlRWZmZWN0KCgpID0+IHtcbi8vICAgICAgICAgY29uc3QgZ2V0VXNlciA9IGFzeW5jICgpID0+IHtcbi8vICAgICAgICAgICAgIHRyeSB7XG4vLyAgICAgICAgICAgICAgICAgLy8gQXdhaXQgdGhlIHJlc3VsdCBvZiB0aGUgYXN5bmMgZnVuY3Rpb24gZ2V0VXNlck5hbWVCeUlkXG4vLyAgICAgICAgICAgICAgICAgY29uc3QgdXBkYXRlZFVzZXIgPSBhd2FpdCBnZXRVc2VyTmFtZUJ5SWQocHJvcHMucHJvZmlsZUlkKTtcbi8vICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh1cGRhdGVkVXNlcik7XG4gICAgXG4vLyAgICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBmZXRjaGVkIHVzZXIgYXMgdGhlIGN1cnJlbnQgZGlzcGxheSB1c2VyXG4vLyAgICAgICAgICAgICAgICAgc2V0Q3VyckRpc3BsYXlVc2VyKHVwZGF0ZWRVc2VyKTtcbi8vICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHVwZGF0aW5nIHVzZXI6XCIsIGVycm9yKTtcbi8vICAgICAgICAgICAgIH1cbi8vICAgICAgICAgfTtcbiAgICBcbi8vICAgICAgICAgLy8gQ2FsbCB0aGUgYXN5bmMgZnVuY3Rpb25cbi8vICAgICAgICAgZ2V0VXNlcigpO1xuICAgICAgICBcbi8vICAgICB9LCBbcHJvcHMucHJvZmlsZUlkXSk7IC8vIFJlLXJ1biB0aGUgZWZmZWN0IGlmIHByb2ZpbGVJZCBjaGFuZ2VzXG4gICAgXG4vLyAgICAgY29uc3QgW21lc3NhZ2VzLCBzZXRNZXNzYWdlc10gPSBSZWFjdC51c2VTdGF0ZShbXG4vLyAgICAgICAgIHsgXCJtc2dcIjogXCJIaSBNeSBNYWluIG1hblwiLCBcImlkXCI6IFwiMVwiIH0sXG4vLyAgICAgICAgIHsgXCJtc2dcIjogXCJIaSBteSBOaWdnYVwiLCBcImlkXCI6IFwiMlwiIH0sXG4vLyAgICAgICAgIHsgXCJtc2dcIjogXCJXaG8geW91IGNhbGxpbmcgTmlnZ2FcIiwgXCJpZFwiOiBcIjFcIiB9LFxuLy8gICAgICAgICB7IFwibXNnXCI6IFwiSGkgTXkgTWFpbiBtYW5cIiwgXCJpZFwiOiBcIjFcIiB9LFxuLy8gICAgICAgICB7IFwibXNnXCI6IFwiSGkgbXkgTmlnZ2FcIiwgXCJpZFwiOiBcIjJcIiB9LFxuLy8gICAgICAgICB7IFwibXNnXCI6IFwiV2hvIHlvdSBjYWxsaW5nIE5pZ2dhXCIsIFwiaWRcIjogXCIxXCIgfSxcbi8vICAgICAgICAgeyBcIm1zZ1wiOiBcIkhpIE15IE1haW4gbWFuXCIsIFwiaWRcIjogXCIxXCIgfSxcbiAgICAgICBcbiAgICAgICAgXG4vLyAgICAgICAgIHsgXCJtc2dcIjogXCJXaG8geW91IGNhbGxpbmcgTmlnZ2FcIiwgXCJpZFwiOiBcIjFcIiB9LFxuLy8gICAgICAgICB7IFwibXNnXCI6IFwiSGkgTXkgTWFpbiBtYW5cIiwgXCJpZFwiOiBcIjFcIiB9LFxuLy8gICAgICAgICB7IFwibXNnXCI6IFwiSGkgbXkgTmlnZ2FcIiwgXCJpZFwiOiBcIjJcIiB9LFxuLy8gICAgICAgICB7IFwibXNnXCI6IFwiV2hvIHlvdSBjYWxsaW5nIE5pZ2dhXCIsIFwiaWRcIjogXCIxXCIgfSxcbi8vICAgICAgICAgLy8gQWRkIG1vcmUgbWVzc2FnZXMgaGVyZS4uLlxuLy8gICAgIF0pO1xuXG4vLyAgICAgY29uc3QgW2N1cnJNc2csIHNldEN1cnJNc2ddID0gUmVhY3QudXNlU3RhdGUoXCJcIik7XG5cbi8vICAgICBmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoZXZlbnQpIHtcbi8vICAgICAgICAgc2V0Q3Vyck1zZyhldmVudC50YXJnZXQudmFsdWUpO1xuLy8gICAgIH1cblxuLy8gICAgIGZ1bmN0aW9uIGhhbmRsZVN1Ym1pdChlKSB7XG4vLyAgICAgICAgIGlmKGN1cnJNc2cubGVuZ3RoPjApXG4vLyAgICAgICAgeyBcbi8vICAgICAgICAgY29uc3QgdGVtcCA9IHsgXCJtc2dcIjogY3Vyck1zZywgXCJpZFwiOiB1c2VySWQgfTtcbi8vICAgICAgICAgYWRkTWVzc2FnZVRvQ2hhdChwcm9wcy5jdXJyQ2hhdCxjdXJyTXNnLHVzZXJJZCk7XG4vLyAgICAgICAgIC8vIHNldE1lc3NhZ2VzKG1lc3NhZ2VzLmNvbmNhdCh0ZW1wKSk7XG4vLyAgICAgICAgIHNldEN1cnJNc2coXCJcIik7XG4gICAgXG4vLyAgICAgfVxuLy8gICAgIH1cbi8vICAgICBhc3luYyBmdW5jdGlvbiBhZGRNZXNzYWdlVG9DaGF0IChjaGF0SWQsIG1lc3NhZ2VUZXh0LCBzZW5kZXJJZCkge1xuLy8gICAgICAgICB0cnkge1xuLy8gICAgICAgICAgICAgY29uc29sZS5sb2coXCJJIGFtIGhlcmVcIilcbi8vICAgICAgICAgICAvLyBSZWZlcmVuY2UgdG8gdGhlIHNwZWNpZmljIGNoYXQgZG9jdW1lbnRcbi8vICAgICAgICAgICBjb25zdCBjaGF0UmVmID0gZG9jKGRiLCBcIkNoYXRzXCIsIGNoYXRJZCk7XG4gICAgICBcbi8vICAgICAgICAgICAvLyBDcmVhdGUgdGhlIG1lc3NhZ2Ugb2JqZWN0IHRvIGJlIGFkZGVkXG4vLyAgICAgICAgICAgY29uc3QgbmV3TWVzc2FnZSA9IHtcbi8vICAgICAgICAgICAgIHNlbmRlcjogc2VuZGVySWQsXG4vLyAgICAgICAgICAgICBtc2c6IG1lc3NhZ2VUZXh0LFxuLy8gICAgICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLCAvLyBBZGQgdGltZXN0YW1wIGlmIG5lZWRlZFxuLy8gICAgICAgICAgIH07XG4gICAgICBcbi8vICAgICAgICAgICAvLyBVcGRhdGUgdGhlIGNoYXQgZG9jdW1lbnQgd2l0aCB0aGUgbmV3IG1lc3NhZ2UgYWRkZWQgdG8gdGhlIG1lc3NhZ2VzIGFycmF5XG4vLyAgICAgICAgICAgYXdhaXQgdXBkYXRlRG9jKGNoYXRSZWYsIHtcbi8vICAgICAgICAgICAgIGNoYXQ6IGFycmF5VW5pb24obmV3TWVzc2FnZSksIC8vIEFkZHMgdGhlIG5ldyBtZXNzYWdlIHRvIHRoZSBtZXNzYWdlcyBhcnJheVxuLy8gICAgICAgICAgIH0pO1xuICAgICAgXG4vLyAgICAgICAgICAgY29uc29sZS5sb2coXCJNZXNzYWdlIGFkZGVkIHN1Y2Nlc3NmdWxseSFcIik7XG4vLyAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFkZGluZyBtZXNzYWdlOlwiLCBlcnJvcik7XG4vLyAgICAgICAgIH1cbi8vICAgICAgIH07XG4vLyAgICAgZnVuY3Rpb24gaGFuZGxlS2V5RG93bihldmVudCkge1xuLy8gICAgICAgICBpZiAoZXZlbnQua2V5ID09PSBcIkVudGVyXCIpXG4vLyAgICAgICAgICAgICBoYW5kbGVTdWJtaXQoKTtcbi8vICAgICB9XG5cbi8vICAgICByZXR1cm4gKFxuLy8gICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLXNsYXRlLTgwMCBmbGV4IGZsZXgtY29sIGgtZnVsbCBwLTEgbS0xIHJvdW5kZWQtbWRcIj5cbi8vICAgICAgICAgICAgIHtjb25zb2xlLmxvZyhwcm9jZXNzZWRDaGF0cyl9XG4vLyAgICAgICAgICAgICB7Y29uc29sZS5sb2cocHJvcHMuY2hhdHMpfVxuLy8gICAgICAgICAgICAgPFByb2ZpbGUgY3VyckRpc3BsYXlVc2VyPXtjdXJyRGlzcGxheVVzZXJ9IC8+XG4vLyAgICAgICAgICAgICB7LyogPFBlcmZlY3RTY3JvbGxiYXI+ICovfVxuLy8gICAgICAgICAgICAgey8qIDxoMT57cHJvcHMuY3VyckNoYXR9PC9oMT4gKi99XG4vLyAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgtZ3JvdyBvdmVyZmxvdy1oaWRkZW5cIj5cbi8vICAgICAgICAgICAgICAgICA8TWVzc2FnZXMgbWVzc2FnZXM9e21lc3NhZ2VzfSBcbi8vICAgICAgICAgICAgICAgICB1c2VySWQ9e3VzZXJJZH1cbi8vICAgICAgICAgICAgICAgICAgICAgY3VyckNoYXQ9e3Byb3BzLmN1cnJDaGF0fVxuLy8gICAgICAgICAgICAgICAgIC8+XG4vLyAgICAgICAgICAgICA8L2Rpdj5cbi8vICAgICAgICAgICAgIHsvKiA8L1BlcmZlY3RTY3JvbGxiYXI+ICAqL31cbi8vICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTIgbXQtYXV0byBwLTIgYmctc2xhdGUtNzAwXCI+XG4vLyAgICAgICAgICAgICAgICAgPFRleHRGaWVsZCBcbi8vICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYmctc2xhdGUtMjAwIHJvdW5kZWQtZnVsbCB3LWZ1bGwgZHJvcC1zaGFkb3ctbWRcIiBcbi8vICAgICAgICAgICAgICAgICAgICAgaWQ9XCJvdXRsaW5lZC1iYXNpY1wiIFxuLy8gICAgICAgICAgICAgICAgICAgICBsYWJlbD1cIk1lc3NhZ2VcIlxuLy8gICAgICAgICAgICAgICAgICAgICB2YWx1ZT17Y3Vyck1zZ31cbi8vICAgICAgICAgICAgICAgICAgICAgdmFyaWFudD1cIm91dGxpbmVkXCIgXG4vLyAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4vLyAgICAgICAgICAgICAgICAgICAgIG9uS2V5RG93bj17aGFuZGxlS2V5RG93bn0gXG4vLyAgICAgICAgICAgICAgICAgLz5cbi8vICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImJnLWdyZWVuLTUwMCByb3VuZGVkLWZ1bGwgcC0yIG0tMlwiIG9uQ2xpY2s9e2hhbmRsZVN1Ym1pdH0+XG4vLyAgICAgICAgICAgICAgICAgICAgIFNlbmRcbi8vICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbi8vICAgICAgICAgICAgIDwvZGl2PlxuLy8gICAgICAgICA8L2Rpdj5cbi8vICAgICApO1xuLy8gfVxuXCJ1c2UgY2xpZW50XCJcbmltcG9ydCBSZWFjdCwgeyB1c2VDb250ZXh0LCB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUHJvZmlsZSBmcm9tIFwiLi9wcm9maWxlLmpzeFwiO1xuaW1wb3J0IHsgVGV4dEZpZWxkIH0gZnJvbSBcIkBtdWkvbWF0ZXJpYWxcIjtcbmltcG9ydCBNZXNzYWdlcyBmcm9tIFwiLi9tZXNzYWdlcy5qc3hcIjtcbmltcG9ydCB7IGFycmF5VW5pb24sIGRvYywgZ2V0RG9jLCB1cGRhdGVEb2MgfSBmcm9tIFwiZmlyZWJhc2UvZmlyZXN0b3JlXCI7XG5pbXBvcnQgeyBkYiB9IGZyb20gXCIuLi9maXJlYmFzZS5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDaGF0Q29tcG9uZW50KHByb3BzKSB7XG4gICAgY29uc3QgW3Byb2Nlc3NlZENoYXRzLCBzZXRQcm9jZXNzZWRDaGF0c10gPSB1c2VTdGF0ZShbXSk7XG4gICAgY29uc3QgW2N1cnJEaXNwbGF5VXNlciwgc2V0Q3VyckRpc3BsYXlVc2VyXSA9IHVzZVN0YXRlKFwiXCIpO1xuICAgIGNvbnN0IFttZXNzYWdlcywgc2V0TWVzc2FnZXNdID0gdXNlU3RhdGUoW10pO1xuICAgIGNvbnN0IFtjdXJyTXNnLCBzZXRDdXJyTXNnXSA9IHVzZVN0YXRlKFwiXCIpO1xuICAgIGNvbnN0IHVzZXJJZCA9IHByb3BzLnVzZXJJZDtcbiAgICBjb25zdCBvdGhlclVzZXIgPSBwcm9wcy5vdGhlclVzZXI7XG4gICAgY29uc3QgY2hhdElkID0gcHJvcHMuY3VyckNoYXQ7XG5cbiAgICAvLyBXZWJTb2NrZXQgaW5pdGlhbGl6YXRpb25cbiAgICBjb25zdCBbc29ja2V0LCBzZXRTb2NrZXRdID0gdXNlU3RhdGUobnVsbCk7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICAvLyBDb25uZWN0IHRvIHRoZSBXZWJTb2NrZXQgc2VydmVyXG4gICAgICAgIGNvbnN0IHdzID0gbmV3IFdlYlNvY2tldCgnd3M6Ly95b3VyLXdlYnNvY2tldC1zZXJ2ZXItdXJsJyk7IC8vIFJlcGxhY2Ugd2l0aCB5b3VyIFdlYlNvY2tldCBzZXJ2ZXIgVVJMXG4gICAgICAgIHNldFNvY2tldCh3cyk7XG5cbiAgICAgICAgd3Mub25vcGVuID0gKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJDb25uZWN0ZWQgdG8gV2ViU29ja2V0IHNlcnZlci5cIik7XG4gICAgICAgIH07XG5cbiAgICAgICAgd3Mub25tZXNzYWdlID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZWNlaXZlZE1lc3NhZ2UgPSBKU09OLnBhcnNlKGV2ZW50LmRhdGEpO1xuICAgICAgICAgICAgaWYgKHJlY2VpdmVkTWVzc2FnZS5jaGF0SWQgPT09IGNoYXRJZCkge1xuICAgICAgICAgICAgICAgIHNldE1lc3NhZ2VzKChwcmV2TWVzc2FnZXMpID0+IFsuLi5wcmV2TWVzc2FnZXMsIHJlY2VpdmVkTWVzc2FnZS5tZXNzYWdlXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgd3Mub25jbG9zZSA9ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRGlzY29ubmVjdGVkIGZyb20gV2ViU29ja2V0IHNlcnZlci5cIik7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHdzLmNsb3NlKCk7XG4gICAgICAgIH07XG4gICAgfSwgW2NoYXRJZF0pO1xuXG4gICAgLy8gR2V0IHVzZXIgZGF0YVxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGdldFVzZXIgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB1c2VyRG9jID0gYXdhaXQgZ2V0RG9jKGRvYyhkYiwgXCJVc2Vyc1wiLCBwcm9wcy5wcm9maWxlSWQpKTtcbiAgICAgICAgICAgIGlmICh1c2VyRG9jLmV4aXN0cygpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdXNlckRhdGEgPSB1c2VyRG9jLmRhdGEoKTtcbiAgICAgICAgICAgICAgICBzZXRDdXJyRGlzcGxheVVzZXIodXNlckRhdGEubmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIGdldFVzZXIoKTtcbiAgICB9LCBbcHJvcHMucHJvZmlsZUlkXSk7XG5cbiAgICAvLyBHZXQgbWVzc2FnZXMgZnJvbSBGaXJlYmFzZVxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IG1vZGlmeUNoYXRzID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdXBkYXRlZENoYXRzID0gYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgICAgICAgICAgICAgcHJvcHMuY2hhdHMubWFwKGFzeW5jIChjb250KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY2VpdmVyQXJyYXkgPSBjb250LmRhdGEucGFydGljaXBhbnRzLmZpbHRlcihwaWQgPT4gcGlkICE9PSB1c2VySWQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZWNlaXZlciA9IHJlY2VpdmVyQXJyYXlbMF07IFxuICAgICAgICAgICAgICAgICAgICBjb25zdCBwYWlyID0gYXdhaXQgZ2V0VXNlck5hbWVCeUlkKHJlY2VpdmVyKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgXCJpZFwiOiBwYWlyLmlkLCBcIm5hbWVcIjogcGFpci5uYW1lLCBcImNoYXRcIjogY29udC5jaGF0LCBcInByb2ZpbGVQaWNcIjogcGFpci5waWMgfTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHNldFByb2Nlc3NlZENoYXRzKHVwZGF0ZWRDaGF0cyk7XG4gICAgICAgIH07XG4gICAgICAgIG1vZGlmeUNoYXRzKCk7XG4gICAgfSwgW3Byb3BzLmNoYXRzLCBwcm9wcy51c2VySWRdKTtcblxuICAgIGNvbnN0IGhhbmRsZVN1Ym1pdCA9ICgpID0+IHtcbiAgICAgICAgaWYgKGN1cnJNc2cubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgY29uc3QgbmV3TWVzc2FnZSA9IHtcbiAgICAgICAgICAgICAgICBjaGF0SWQ6IGNoYXRJZCxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiB7XG4gICAgICAgICAgICAgICAgICAgIHNlbmRlcklkOiB1c2VySWQsXG4gICAgICAgICAgICAgICAgICAgIG1zZzogY3Vyck1zZyxcbiAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvLyBTZW5kIG1lc3NhZ2UgdGhyb3VnaCBXZWJTb2NrZXRcbiAgICAgICAgICAgIGlmIChzb2NrZXQpIHtcbiAgICAgICAgICAgICAgICBzb2NrZXQuc2VuZChKU09OLnN0cmluZ2lmeShuZXdNZXNzYWdlKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEFkZCBtZXNzYWdlIHRvIEZpcmViYXNlXG4gICAgICAgICAgICBhZGRNZXNzYWdlVG9DaGF0KGNoYXRJZCwgY3Vyck1zZywgdXNlcklkKTtcbiAgICAgICAgICAgIHNldEN1cnJNc2coXCJcIik7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgYXN5bmMgZnVuY3Rpb24gYWRkTWVzc2FnZVRvQ2hhdChjaGF0SWQsIG1lc3NhZ2VUZXh0LCBzZW5kZXJJZCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgY2hhdFJlZiA9IGRvYyhkYiwgXCJDaGF0c1wiLCBjaGF0SWQpO1xuICAgICAgICAgICAgY29uc3QgbmV3TWVzc2FnZSA9IHtcbiAgICAgICAgICAgICAgICBzZW5kZXI6IHNlbmRlcklkLFxuICAgICAgICAgICAgICAgIG1zZzogbWVzc2FnZVRleHQsXG4gICAgICAgICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGF3YWl0IHVwZGF0ZURvYyhjaGF0UmVmLCB7XG4gICAgICAgICAgICAgICAgY2hhdDogYXJyYXlVbmlvbihuZXdNZXNzYWdlKSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFkZGluZyBtZXNzYWdlOlwiLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVLZXlEb3duKGV2ZW50KSB7XG4gICAgICAgIGlmIChldmVudC5rZXkgPT09IFwiRW50ZXJcIikge1xuICAgICAgICAgICAgaGFuZGxlU3VibWl0KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLXNsYXRlLTgwMCBmbGV4IGZsZXgtY29sIGgtZnVsbCBwLTEgbS0xIHJvdW5kZWQtbWRcIj5cbiAgICAgICAgICAgIDxQcm9maWxlIGN1cnJEaXNwbGF5VXNlcj17Y3VyckRpc3BsYXlVc2VyfSAvPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LWdyb3cgb3ZlcmZsb3ctaGlkZGVuXCI+XG4gICAgICAgICAgICAgICAgPE1lc3NhZ2VzIG1lc3NhZ2VzPXttZXNzYWdlc30gdXNlcklkPXt1c2VySWR9IGN1cnJDaGF0PXtwcm9wcy5jdXJyQ2hhdH0gLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMiBtdC1hdXRvIHAtMiBiZy1zbGF0ZS03MDBcIj5cbiAgICAgICAgICAgICAgICA8VGV4dEZpZWxkXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJnLXNsYXRlLTIwMCByb3VuZGVkLWZ1bGwgdy1mdWxsIGRyb3Atc2hhZG93LW1kXCJcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9XCJNZXNzYWdlXCJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2N1cnJNc2d9XG4gICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJvdXRsaW5lZFwiXG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0Q3Vyck1zZyhlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICAgICAgICAgIG9uS2V5RG93bj17aGFuZGxlS2V5RG93bn1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYmctZ3JlZW4tNTAwIHJvdW5kZWQtZnVsbCBwLTIgbS0yXCIgb25DbGljaz17aGFuZGxlU3VibWl0fT5cbiAgICAgICAgICAgICAgICAgICAgU2VuZFxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICk7XG59XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJQcm9maWxlIiwiVGV4dEZpZWxkIiwiTWVzc2FnZXMiLCJhcnJheVVuaW9uIiwiZG9jIiwiZ2V0RG9jIiwidXBkYXRlRG9jIiwiZGIiLCJDaGF0Q29tcG9uZW50IiwicHJvcHMiLCJwcm9jZXNzZWRDaGF0cyIsInNldFByb2Nlc3NlZENoYXRzIiwiY3VyckRpc3BsYXlVc2VyIiwic2V0Q3VyckRpc3BsYXlVc2VyIiwibWVzc2FnZXMiLCJzZXRNZXNzYWdlcyIsImN1cnJNc2ciLCJzZXRDdXJyTXNnIiwidXNlcklkIiwib3RoZXJVc2VyIiwiY2hhdElkIiwiY3VyckNoYXQiLCJzb2NrZXQiLCJzZXRTb2NrZXQiLCJ3cyIsIldlYlNvY2tldCIsIm9ub3BlbiIsImNvbnNvbGUiLCJsb2ciLCJvbm1lc3NhZ2UiLCJldmVudCIsInJlY2VpdmVkTWVzc2FnZSIsIkpTT04iLCJwYXJzZSIsImRhdGEiLCJwcmV2TWVzc2FnZXMiLCJtZXNzYWdlIiwib25jbG9zZSIsImNsb3NlIiwiZ2V0VXNlciIsInVzZXJEb2MiLCJwcm9maWxlSWQiLCJleGlzdHMiLCJ1c2VyRGF0YSIsIm5hbWUiLCJtb2RpZnlDaGF0cyIsInVwZGF0ZWRDaGF0cyIsIlByb21pc2UiLCJhbGwiLCJjaGF0cyIsIm1hcCIsImNvbnQiLCJyZWNlaXZlckFycmF5IiwicGFydGljaXBhbnRzIiwiZmlsdGVyIiwicGlkIiwicmVjZWl2ZXIiLCJwYWlyIiwiZ2V0VXNlck5hbWVCeUlkIiwiaWQiLCJjaGF0IiwicGljIiwiaGFuZGxlU3VibWl0IiwibGVuZ3RoIiwibmV3TWVzc2FnZSIsInNlbmRlcklkIiwibXNnIiwidGltZXN0YW1wIiwiRGF0ZSIsInNlbmQiLCJzdHJpbmdpZnkiLCJhZGRNZXNzYWdlVG9DaGF0IiwibWVzc2FnZVRleHQiLCJjaGF0UmVmIiwic2VuZGVyIiwiZXJyb3IiLCJoYW5kbGVLZXlEb3duIiwia2V5IiwiZGl2IiwiY2xhc3NOYW1lIiwibGFiZWwiLCJ2YWx1ZSIsInZhcmlhbnQiLCJvbkNoYW5nZSIsImUiLCJ0YXJnZXQiLCJvbktleURvd24iLCJidXR0b24iLCJvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/chat.jsx\n"));

/***/ })

});