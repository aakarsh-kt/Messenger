/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"24a3db5fe628\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzPzRmMzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIyNGEzZGI1ZmU2MjhcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/sidebar.jsx":
/*!************************************!*\
  !*** ./app/components/sidebar.jsx ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\";\n// import Image from \"next/image\";\n// import React from \"react\";\n// import { db } from \"../firebase\";\n// import { doc, getDoc } from \"firebase/firestore\";\n// import { useEffect } from \"react\";\n// import { Button, TextField } from \"@mui/material\";\n// import { useRouter } from \"next/navigation\";\n// import { useState } from \"react\";\n// import SearchUser from \"./searchUser\";\n// export default function (props) {\n//     //    const modArray=props.contact.map()\n//     const userId = props.userId;\n//     async function getUserNameById(receiver) {\n//         try {\n//             // Reference to the document with the given userId in the \"users\" collection\n//             const userRef = doc(db, \"Users\", receiver);\n//             // Fetch the document\n//             const userDoc = await getDoc(userRef);\n//             if (userDoc.exists()) {\n//                 // Extract and return the user's name from the document data\n//                 const userData = userDoc.data();\n//                 // console.log(userDoc.id);\n//                 const id = userDoc.id;\n//                 const name = userData.name;\n//                 const pic = userData.profilePicture;\n//                 const pair = {\"id\":id, \"name\": name, \"pic\": pic };\n//                 // console.log(pic)\n//                 return pair;\n//             } else {\n//                 console.log(\"No such user!\");\n//                 return null;\n//             }\n//         } catch (error) {\n//             console.error(\"Error fetching user:\", error);\n//         }\n//     }\n//     const [processedChats, setProcessedChats] = React.useState([]);\n//     //   useEffect(()=>{\n//     //     const modChat=props.chats.map((cont,index)=>{\n//     //         const receiver=cont.participants.filter(pid=>pid!=userId)\n//     //         const name=getUserNameById(receiver);\n//     //         return ({\"name\":name,\"chat\":cont.chat});\n//     //     })\n//     //     setProcessedChats(modChat);\n//     //     console.log(modChat);\n//     //   },[props.chats])\n//     // import { useState, useEffect } from 'react';\n//     useEffect(() => {\n//         const modifyChats = async () => {\n//             try {\n//                 // Using Promise.all to handle async map operation\n//                 const updatedChats = await Promise.all(\n//                     props.chats.map(async (cont) => {\n//                         const groupname=cont?.groupName;\n//                         const id=cont.chatId;\n//                         const receiverArray = cont.data.participants.filter(pid => pid !== userId);\n//                         const receiver = receiverArray[0]; // Assuming only one receiver\n//                         // Assuming getUserNameById is async and fetches the username\n//                         const pair = await getUserNameById(receiver);\n//                         // console.log(profilePic)\n//                         return { \"id\":pair.id,\"name\": pair.name, \"chat\": cont.chat, \"profilePic\": pair.pic ,\"chatId\":id};\n//                     })\n//                 );\n//                 // Update the state with modified chats\n//                 setProcessedChats(updatedChats);\n//             } catch (error) {\n//                 console.error(\"Error modifying chats:\", error);\n//             }\n//         };\n//         modifyChats();\n//     }, [props.chats, userId]);\n//     const [search,setSearch]=React.useState(\"\");\n//     function handleSubmit(e) {\n//         // console.log(search);\n//         setSearch(\"\");\n//     }\n//     function handleKeyDown(e){\n//         if(e.key==\"Enter\")\n//             handleSubmit();\n//     }\n//     const router=useRouter();\n//     return (\n//         <div className=\"bg-black p-2 m-1 h-full rounded-md \">\n//             <div className=\"flex flex-row justify-around m-2 p-2\">\n//                 <button className=\"bg-white rounded-md p-1\" onClick={props.newChat}> New Chat</button>\n//                 <button className=\"bg-white rounded-md p-1\" onClick={props.newGrpFunc}> New Group</button>\n//             </div>\n//             <h1 className=\"text-white m-2 p-2 align-center\">Your Chats</h1>\n//             <div className=\"flex flex-row justify-around\">\n//                 <TextField \n//                 name=\"search\"\n//                 value={search}\n//                 label=\"Search\"\n//                 onChange={(e)=>setSearch(e.target.value)}\n//                 onKeyDown={handleKeyDown}\n//                 className=\"rounded-md p-1 m-2 w-3/4 bg-white\"\n//                  placeholder=\"Search\" />\n//                 <button className=\"bg-blue-500 p-2 m-2 rounded-lg hover:bg-blue-300\">Go</button>\n//             </div>\n//             <ul className=\"cursor-pointer \" >\n//                  {console.log(processedChats)} \n//                 {processedChats.length > 0 && processedChats.map((cont, index) => {\n//                     //   const groupName=cont?.groupName;\n//                     //   if(!groupName){\n//                     //     const receiver=cont.participants.filter(pid=>pid!=userId)\n//                     // const name=getUserNameById(receiver);\n//                     return <li key={index} className=\"m-2 p-1 rounded-md border-orange-400 border-2 bg-slate-900 text-orange-400\" onClick={() => props.selectContact(cont.id,cont.chatId)}>\n//                         <div className=\"flex  justify-around max-h-10 \">\n//                             {/* {console.log(cont.profilePic)} */}\n//                             <Image className=\"rounded-full\" src={cont.profilePic}  height={50} width={50} alt=\"Profile\" />\n//                             <h3 className=\"text-xl\">{cont.name}</h3>\n//                         </div>\n//                     </li>\n//                 })}\n//                 {/* <li onClick={() => console.log(\"Contact 1 clicked\")}>Contact 1</li>\n//                 <li>Contact 2</li> */}\n//             </ul>\n//         </div>\n//     )\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/sidebar.jsx\n"));

/***/ })

});